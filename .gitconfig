# http://www.kernel.org/pub/software/scm/git/docs/git-config.html
[core]
	excludesfile = ~/.gitignore_global
	pager = diff-highlight | less -S
	editor = vim
	# autocrlf = input # http://help.github.com/line-endings/
[user]
	name = Rafał Lisowski
	email = lisukorin@gmail.com
	signingkey = B15787F1747EAE87
[filter "lfs"]
        clean = git-lfs clean %f
        smudge = git-lfs smudge %f
        required = true
; [color]
; 	ui = auto
; 	diff = auto
; 	status = auto
; 	branch = auto
; 	interactive = auto
; 	grep = auto
; [color "status"]
; 	changed = blue
; 	untracked = blue
; [color "diff"]
; 	old = blue
[branch]
	# autosetupmerge = always
	# autosetuprebase = always
[help]
	autocorrect = 10
[merge]
	summary = true
	tool = vimdiff
	conflictstyle = diff3
	verbosity = 1
[push]
	default = simple
[rebase]
	autosquash = true
[diff]
	renames = true
	tool = vimdiff
	# Git diff will use (i)ndex, (w)ork tree, (c)ommit and (o)bject
	# instead of a/b/c/d as prefixes for patches
	mnemonicprefix = true
[rerere]
	# Remember my merges
	# http://gitfu.wordpress.com/2008/04/20/git-rerere-rereremember-what-you-did-last-time/
	enabled = true
[commit]
	template = ~/.gitmessage
	gpgsign = true
[alias]
	h = help
	st = status -sb
	d = diff
	id = icdiff                       # https://github.com/jeffkaufman/icdiff
	b = branch -v                     # branch (verbose)
	refs = for-each-ref --sort=committerdate refs/heads/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))'

	# commit
	c = commit -m                     # commit with message
	ca = commit -am                   # commit all with message
	ci = commit -v
	cia = commit -v -a
	uncommit = reset --mixed HEAD~

	# cherry-pick
	cp = cherry-pick
	cpx = cherry-pick -x

	co = checkout

	# log
	l = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d %C(white)%s %Cgreen(%cr - %cd) %C(bold blue)<%an> (%cn)%Creset %C(bold blue)%Creset' --abbrev-commit
	ls = log --pretty=format:'%Cred%h%Creset -%C(yellow)%d %C(white)%s %Cgreen(%aN - %cr) %C(bold blue)%Creset' --abbrev-commit --since=last.mon --author="Rafał.Lisowski"
	today = log --since=midnight --author='Rafał Lisowski' --oneline --graph --all --pretty=format:'%Cred%h%Creset -%C(yellow)%d %C(white)%s %Cgreen(%cr - %cd) %C(bold blue)<%cn>%Creset %C(bold blue)%Creset' --abbrev-commit
	yesterday = log --since=day.before.yesterday.midnight --until=midnight --author='Rafał Lisowski' --oneline --graph --all --pretty=format:'%Cred%h%Creset -%C(yellow)%d %C(white)%s %Cgreen(%cr - %cd) %C(bold blue)<%cn>%Creset %C(bold blue)%Creset' --abbrev-commit

	# reset
	unstage = reset HEAD              # remove files from index (tracking)
	uncommit = reset --soft HEAD^     # go back before last commit, with files in uncommitted state
	filelog = log -u                  # show changes to a file
	mt = mergetool                    # fire up the merge tool

	i = !~/bin/git-info-short
	gitkconflict = !gitk --left-right HEAD...MERGE_HEAD
	clear = "!sh -c 'find . -name '*.orig' -delete'"
	ctags = "!sh -c '[ -f .git/hooks/ctags ] || git init; .git/hooks/ctags' git-ctags"
	stats = "!(echo \"\nby hour\n--------------\") && (for i in 00 01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20 21 22 23; do echo $( echo "$i\t"; git shortlog  -n --format='%ad %s' | grep " $i:" | wc -l); done) && (echo \"\n\nby day\n--------------\") && (for i in Mon Tue Wed Thu Fri Sat Sun; do echo $( echo "$i\t"; git shortlog  -n --format='%ad %s'| grep "$i " | wc -l); done) && (echo \"\n\nby user\n--------------\") && (git shortlog  -ns)"
	latest = for-each-ref --sort=-committerdate --format='%(committerdate:short) %(refname:short)'

[init]
	templatedir = ~/.git_template
; [pull]
; 	rebase = true
[include]
	path = ~/.gitconfig.local
